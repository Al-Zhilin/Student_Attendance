#ifndef PASSWORDS_H
#define PASSWORDS_H
#include <types.h>

//-------------------------------Пароли, идентификаторы и id-шки групп в тг-----------------------
#define ssid ""                                                                                  //wifi ssid
#define password ""                                                                              //wifi pass
#define BOT_TOKEN ""                                                                             //токен бота
#define CLIENT_EMAIL ""                                                                          //сервисная почта гугла
#define error_chat ""                                                                            //чат, в который будут отправляться сообщения об ошибках
#define PROJECT_ID ""                                                                            //id проекта на google sheet
#define BOT_USERNAME ""                                                                          //юзернейм бота
#define OTA_NAME ""                                                                              //имя для OTA
#define OTA_PASS ""                                                                              //пароль для OTA
#define GROUP_COMMANDER ""                                                                       //юзернейм старосты
#define SHEET1_ID _                                                                              //id первого листа
#define SHEET2_ID _                                                                              //id второго листа

//---------------------------------Ключи и id для доступа к таблице---------------------------------
const char PRIVATE_KEY[] PROGMEM = "";
String spreadsheetId = "";

struct person {
  String surname;
  bool subgroup;
};

struct lesson_borders {
  Time start;
  Time end;
};

const String Admins[] = {    
  "",
  "",
};

const String Groups[] = {
  "",
  "",
};

//-------------------------------Информация по группе и расписанию----------------------------------
const struct person students[] = {{"Ололоева", 1}, {"Ололоев", 0}};	//фамилии приведены в качестве примера, составные части спискаа - {XX, Y}, где  XX - фамилия человека, а Y = принадлежноть к подгруппе (0 - 1 подгр., 1 - вторая)

const String subjects[]{	//Список ВСЕХ возможных предметов, т.е. названия всех уроков/пар, которые присутствуют в рассписании
  "Физика",
  "Математика",
  "...",
  "...",
  "...",
};

const lesson_borders lessons[6] = {            //Размер этого массива (количество заполненных пар) должно быть равно максимальному количеству пар в любой день недели!
  {Time(8, 0), Time(9, 20)},
  {Time(9, 30), Time(10, 50)},				   // Каждая строка - информация об одной паре
  {Time(11, 10), Time(12, 30)},				   // Строки разделеы на 1 обьекта Time, где в () указывается время, чч, мм
  {Time(12, 40), Time(14, 0)},				   // Пример: Time(часы, минуты), часы и мыынуты у первого обьекта - время начало этой пары
  {Time(14, 10), Time(15, 30)},				   // Часы и минуты второго обьекта Time - время конца этой пары.
  {Time(15, 40), Time(17, 0)},
};											   //Данные приведены для примера! Перед началом работы установите свои значения!!

#endif